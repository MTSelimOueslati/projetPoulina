// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetPoulinaData.Context;

namespace ProjetPoulinaData.Migrations
{
    [DbContext(typeof(ProjetPoulinaDbContext))]
    partial class ProjetPoulinaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Amortissement", b =>
                {
                    b.Property<Guid>("AmortissementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDu")
                        .HasColumnType("datetime2");

                    b.Property<float>("Prix")
                        .HasColumnType("real");

                    b.Property<float>("TotalAmortissement")
                        .HasColumnType("real");

                    b.HasKey("AmortissementId");

                    b.ToTable("amortissement");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Centre", b =>
                {
                    b.Property<Guid>("CentreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Delai")
                        .HasColumnType("real");

                    b.Property<Guid>("fk_amortissement")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_speculation")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CentreId");

                    b.HasIndex("fk_amortissement");

                    b.ToTable("centre");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Prix", b =>
                {
                    b.Property<Guid>("PrixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("fk_Speculation")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("prixx")
                        .HasColumnType("real");

                    b.HasKey("PrixId");

                    b.HasIndex("fk_Speculation");

                    b.ToTable("prix");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Prix");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Speculation", b =>
                {
                    b.Property<Guid>("SpeculationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Delai")
                        .HasColumnType("real");

                    b.Property<Guid>("fk_centre")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SpeculationId");

                    b.ToTable("speculation");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Speculation_centre", b =>
                {
                    b.Property<Guid>("speculation_centre_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_centre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("fk_speculation")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("speculation_centre_Id");

                    b.HasIndex("fk_centre");

                    b.HasIndex("fk_speculation");

                    b.ToTable("speculation_centre");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Stock", b =>
                {
                    b.Property<Guid>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateAu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateDu")
                        .HasColumnType("datetime2");

                    b.Property<float>("ValeurDuStock")
                        .HasColumnType("real");

                    b.HasKey("StockId");

                    b.ToTable("stock");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.TraitementStock", b =>
                {
                    b.Property<Guid>("TraitementStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Amortissement")
                        .HasColumnType("real");

                    b.Property<float>("Cout")
                        .HasColumnType("real");

                    b.Property<int>("EffectifRestant")
                        .HasColumnType("int");

                    b.Property<float>("ValeurResiduel")
                        .HasColumnType("real");

                    b.Property<Guid>("fk_stock")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("TraitementStockId");

                    b.HasIndex("fk_stock");

                    b.ToTable("traitementstock");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Marche", b =>
                {
                    b.HasBaseType("ProjetPoulinaDomain.Models.Prix");

                    b.HasDiscriminator().HasValue("Marche");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Oeuf", b =>
                {
                    b.HasBaseType("ProjetPoulinaDomain.Models.Prix");

                    b.HasDiscriminator().HasValue("Oeuf");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Reforme", b =>
                {
                    b.HasBaseType("ProjetPoulinaDomain.Models.Prix");

                    b.HasDiscriminator().HasValue("Reforme");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Centre", b =>
                {
                    b.HasOne("ProjetPoulinaDomain.Models.Amortissement", "amortissment")
                        .WithMany("centre")
                        .HasForeignKey("fk_amortissement")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("amortissment");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Prix", b =>
                {
                    b.HasOne("ProjetPoulinaDomain.Models.Speculation", "speculation")
                        .WithMany("prix")
                        .HasForeignKey("fk_Speculation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("speculation");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Speculation_centre", b =>
                {
                    b.HasOne("ProjetPoulinaDomain.Models.Centre", "centre")
                        .WithMany("speculation_centre")
                        .HasForeignKey("fk_centre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProjetPoulinaDomain.Models.Speculation", "speculation")
                        .WithMany("speculation_centre")
                        .HasForeignKey("fk_speculation")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("centre");

                    b.Navigation("speculation");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.TraitementStock", b =>
                {
                    b.HasOne("ProjetPoulinaDomain.Models.Stock", "stock")
                        .WithMany("traitementStocks")
                        .HasForeignKey("fk_stock")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("stock");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Amortissement", b =>
                {
                    b.Navigation("centre");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Centre", b =>
                {
                    b.Navigation("speculation_centre");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Speculation", b =>
                {
                    b.Navigation("prix");

                    b.Navigation("speculation_centre");
                });

            modelBuilder.Entity("ProjetPoulinaDomain.Models.Stock", b =>
                {
                    b.Navigation("traitementStocks");
                });
#pragma warning restore 612, 618
        }
    }
}
